class AddTwoNumbers {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode list=null;
        int balance=0;
		 while(l1!=null&&l2!=null) {
			 if(list==null) {
				 list=new ListNode((l1.val+l2.val+balance)%10);
				 if(l1.val+l2.val+balance>9)balance=1;
				 else balance=0;
				 l1=l1.next;l2=l2.next;
				 continue;
			 }
			 addValue(list,(l1.val+l2.val+balance)%10);
			 if(l1.val+l2.val+balance>9)balance=1;
			 else balance=0;
			 l1=l1.next;l2=l2.next;
			 
		 }
		 while(l1!=null) {
			 if(list==null) {
				 list=new ListNode((l1.val+balance)%10);
				 if(l1.val+balance>9)balance=1;
				 else balance=0;
				 l1=l1.next;
				 continue;
			 }
			 addValue(list,(l1.val+balance)%10);
			 if(l1.val+balance>9)balance=1;
			 else balance=0;
			 l1=l1.next;
		 }
		 while(l2!=null) {
			 if(list==null) {
				 list=new ListNode((l2.val+balance)%10);
				 if(l2.val+balance>9)balance=1;
				 else balance=0;
				 l2=l2.next;
				 continue;
			 }
			 addValue(list,(l2.val+balance)%10);
			 if(l2.val+balance>9)balance=1;
			 else balance=0;
			 l2=l2.next;
		 }
		  if(balance!=0)addValue(list,1);
		 return list;
    }
     ListNode addlist(ListNode l1,ListNode l2,int balance) {
		 ListNode list=null;
		 while(l1!=null&&l2!=null) {
			 if(list==null) {
				 list=new ListNode(l1.val+l2.val+balance);
				 l1=l1.next;l2=l2.next;
				 continue;
			 }
			 addValue(list,l1.val+l2.val+balance);
			 if(l1.val+l2.val+balance>9)balance=1;
			 else balance=0;
			 l1=l1.next;l2=l2.next;
			 
		 }
		 while(l1!=null) {
			 if(list==null) {
				 list=new ListNode(l1.val+l2.val+balance);
				 l1=l1.next;l2=l2.next;
				 continue;
			 }
			 addValue(list,l1.val+balance);
			 if(l1.val+balance>9)balance=1;
			 else balance=0;
			 l1=l1.next;
		 }
		 while(l2!=null) {
			 if(list==null) {
				 list=new ListNode(l1.val+l2.val+balance);
				 l1=l1.next;l2=l2.next;
				 continue;
			 }
			 addValue(list,l2.val+balance);
			 if(l2.val+balance>9)balance=1;
			 else balance=0;
			 l2=l2.next;
		 }
		 
		 return list;
	 }
	 
	 static void addValue(ListNode list,int val) {
		 if(list==null) {
			 list=new ListNode(val);
			 return;
		 }
		 while(list!=null) {
			 if(list.next==null) {
				 list.next=new ListNode(val);
				 break;
			 }
			 list=list.next;
		 }
		 
	 }
}


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
